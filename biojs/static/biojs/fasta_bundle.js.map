{"version":3,"sources":["webpack:///webpack/bootstrap 20d117a683ba3b7df487","webpack:///./src/embed-webpack.js","webpack:///./src/index.js","webpack:///./~/biojs-io-parser/lib/index.js","webpack:///./~/biojs-io-parser/~/xhr/index.js","webpack:///./~/biojs-io-parser/~/xhr/~/global/window.js","webpack:///./~/biojs-io-parser/~/xhr/~/once/once.js","webpack:///./~/biojs-io-parser/~/xhr/~/is-function/index.js","webpack:///./~/biojs-io-parser/~/xhr/~/parse-headers/parse-headers.js","webpack:///./~/biojs-io-parser/~/xhr/~/parse-headers/~/trim/index.js","webpack:///./~/biojs-io-parser/~/xhr/~/parse-headers/~/for-each/index.js","webpack:///./~/biojs-io-parser/~/xhr/~/xtend/immutable.js","webpack:///./~/biojs-io-parser/~/vow/lib/vow.js","webpack:///(webpack)/~/node-libs-browser/~/timers-browserify/main.js","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js","webpack:///./src/fasta.js","webpack:///./~/msa-seqtools/lib/index.js","webpack:///./src/extend.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACND;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;;;;;;ACZD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,MAAK;AACL,kCAAiC,SAAS;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;;;;;;AC1NA;AACA;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;AC7BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACbA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,SAAS;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7CA;;AAEA;;AAEA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;mCClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAgD;AAChD;AACA;AACA;AACA;;AAEA,8DAA6D;AAC7D;AACA;AACA;AACA;;AAEA,yFAAwF;AACxF;AACA;AACA;;AAEA,0DAAyD,uBAAuB;;AAEhF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA,cAAa;;AAEb;AACA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;;AAEb;AACA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA,2CAA0C,4CAA4C;AACtF;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,mCAAkC;AAClC,6CAA4C;AAC5C,uBAAsB,oBAAoB,EAAE,EAAE;AAC9C;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,aAAY;AACZ;AACA,+BAA8B;AAC9B,2BAA0B;AAC1B,8BAA6B;AAC7B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,uDAAuD;AACvE;AACA,+BAA8B,yBAAyB;AACvD,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,+BAA8B;AAC9B,mCAAkC;AAClC,+BAA8B;AAC9B,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA,wFAAuF;AACvF;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA,EAAC;;;;;;;;AClzCD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,iBAAiB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,G;;;;;;;AC3EA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;AClGtC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,cAAc;;AAEjC;;AAEA;;AAEA;AACA,mCAAkC;AAClC,qCAAoC;AACpC;AACA;AACA,mB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAoC,WAAW;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtOA;AACA;AACA;AACA;AACA;AACA,4CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC","file":"dist/fasta_bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 20d117a683ba3b7df487\n **/","var Fasta = require('./index');\n\n//Define fasta requirejs module\nwindow.define('fasta', function(){\n  console.log(\"Fasta requirejs module defined\");\n  return Fasta;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/embed-webpack.js\n ** module id = 0\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.10.0\n(function() {\n  var Fasta, GenericReader;\n\n  GenericReader = require(\"biojs-io-parser\");\n\n  Fasta = require(\"./fasta\");\n\n  module.exports = Fasta;\n\n  GenericReader.mixin(Fasta);\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 1\n ** module chunks = 0\n **/","var GenericReader;\n\nvar xhr = require('request');\nvar vow = require('vow');\n\nmodule.exports = GenericReader = (function() {\n  function GenericReader() {}\n\n  // returns a promise if callback is undefined\n  GenericReader.read = function(url, callback) {\n    var onret;\n    onret = (function(_this) {\n      return function(err, response, text) {\n        return GenericReader._onRetrieval(err, text, callback, _this);\n      };\n    })(this);\n\n    if(typeof callback === \"undefined\"){\n      var prom = vow.defer();\n      callback = function(err, res){\n        if(err){\n          prom.reject(err);\n        }else{\n          prom.resolve(res);\n        }\n      };\n      xhr(url, onret);\n      return prom.promise();\n    }else{\n      return xhr(url, onret);\n    }\n  };\n\n  GenericReader._onRetrieval = function(err, text, callback, _this) {\n    var rText;\n    if(typeof err !== \"undefined\"){\n      rText = _this.parse(text);\n    }\n    return callback.call(_this, err, rText);\n  };\n\n  // provide a convenient shortcut to inherit\n  GenericReader.extend = function(obj, statics){\n    return extend(GenericReader, obj, statics); \n  };\n  // Mixin utility\n  GenericReader.mixin = function(proto) {\n    var exports = ['read'];\n    if(typeof proto !== \"object\"){\n      proto = proto.prototype;\n    }\n    exports.forEach(function(name) {\n      proto[name] = GenericReader[name];\n    }, this);\n    return proto;\n  };\n\n  return GenericReader;\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/lib/index.js\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\nvar window = require(\"global/window\")\nvar once = require(\"once\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    var callback = options.callback\n    if(typeof callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n    callback = once(callback)\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            loadFunc()\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else if (xhr.responseType === \"text\" || !xhr.responseType) {\n            body = xhr.responseText || xhr.responseXML\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    var failureResponse = {\n                body: undefined,\n                headers: {},\n                statusCode: 0,\n                method: method,\n                url: uri,\n                rawRequest: xhr\n            }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        callback(err, response, response.body)\n\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data || null\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n\n    if (\"json\" in options) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            aborted=true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    xhr.send(body)\n\n    return xhr\n\n\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/index.js\n ** module id = 3\n ** module chunks = 0\n **/","if (typeof window !== \"undefined\") {\n    module.exports = window;\n} else if (typeof global !== \"undefined\") {\n    module.exports = global;\n} else if (typeof self !== \"undefined\"){\n    module.exports = self;\n} else {\n    module.exports = {};\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/global/window.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = once\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return fn.apply(this, arguments)\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/once/once.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/is-function/index.js\n ** module id = 6\n ** module chunks = 0\n **/","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/parse-headers/parse-headers.js\n ** module id = 7\n ** module chunks = 0\n **/","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/parse-headers/~/trim/index.js\n ** module id = 8\n ** module chunks = 0\n **/","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/parse-headers/~/for-each/index.js\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/xhr/~/xtend/immutable.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * @module vow\n * @author Filatov Dmitry <dfilatov@yandex-team.ru>\n * @version 0.4.12\n * @license\n * Dual licensed under the MIT and GPL licenses:\n *   * http://www.opensource.org/licenses/mit-license.php\n *   * http://www.gnu.org/licenses/gpl.html\n */\n\n(function(global) {\n\nvar undef,\n    nextTick = (function() {\n        var fns = [],\n            enqueueFn = function(fn) {\n                return fns.push(fn) === 1;\n            },\n            callFns = function() {\n                var fnsToCall = fns, i = 0, len = fns.length;\n                fns = [];\n                while(i < len) {\n                    fnsToCall[i++]();\n                }\n            };\n\n        if(typeof setImmediate === 'function') { // ie10, nodejs >= 0.10\n            return function(fn) {\n                enqueueFn(fn) && setImmediate(callFns);\n            };\n        }\n\n        if(typeof process === 'object' && process.nextTick) { // nodejs < 0.10\n            return function(fn) {\n                enqueueFn(fn) && process.nextTick(callFns);\n            };\n        }\n\n        var MutationObserver = global.MutationObserver || global.WebKitMutationObserver; // modern browsers\n        if(MutationObserver) {\n            var num = 1,\n                node = document.createTextNode('');\n\n            new MutationObserver(callFns).observe(node, { characterData : true });\n\n            return function(fn) {\n                enqueueFn(fn) && (node.data = (num *= -1));\n            };\n        }\n\n        if(global.postMessage) {\n            var isPostMessageAsync = true;\n            if(global.attachEvent) {\n                var checkAsync = function() {\n                        isPostMessageAsync = false;\n                    };\n                global.attachEvent('onmessage', checkAsync);\n                global.postMessage('__checkAsync', '*');\n                global.detachEvent('onmessage', checkAsync);\n            }\n\n            if(isPostMessageAsync) {\n                var msg = '__promise' + Math.random() + '_' +new Date,\n                    onMessage = function(e) {\n                        if(e.data === msg) {\n                            e.stopPropagation && e.stopPropagation();\n                            callFns();\n                        }\n                    };\n\n                global.addEventListener?\n                    global.addEventListener('message', onMessage, true) :\n                    global.attachEvent('onmessage', onMessage);\n\n                return function(fn) {\n                    enqueueFn(fn) && global.postMessage(msg, '*');\n                };\n            }\n        }\n\n        var doc = global.document;\n        if('onreadystatechange' in doc.createElement('script')) { // ie6-ie8\n            var createScript = function() {\n                    var script = doc.createElement('script');\n                    script.onreadystatechange = function() {\n                        script.parentNode.removeChild(script);\n                        script = script.onreadystatechange = null;\n                        callFns();\n                };\n                (doc.documentElement || doc.body).appendChild(script);\n            };\n\n            return function(fn) {\n                enqueueFn(fn) && createScript();\n            };\n        }\n\n        return function(fn) { // old browsers\n            enqueueFn(fn) && setTimeout(callFns, 0);\n        };\n    })(),\n    throwException = function(e) {\n        nextTick(function() {\n            throw e;\n        });\n    },\n    isFunction = function(obj) {\n        return typeof obj === 'function';\n    },\n    isObject = function(obj) {\n        return obj !== null && typeof obj === 'object';\n    },\n    toStr = Object.prototype.toString,\n    isArray = Array.isArray || function(obj) {\n        return toStr.call(obj) === '[object Array]';\n    },\n    getArrayKeys = function(arr) {\n        var res = [],\n            i = 0, len = arr.length;\n        while(i < len) {\n            res.push(i++);\n        }\n        return res;\n    },\n    getObjectKeys = Object.keys || function(obj) {\n        var res = [];\n        for(var i in obj) {\n            obj.hasOwnProperty(i) && res.push(i);\n        }\n        return res;\n    },\n    defineCustomErrorType = function(name) {\n        var res = function(message) {\n            this.name = name;\n            this.message = message;\n        };\n\n        res.prototype = new Error();\n\n        return res;\n    },\n    wrapOnFulfilled = function(onFulfilled, idx) {\n        return function(val) {\n            onFulfilled.call(this, val, idx);\n        };\n    };\n\n/**\n * @class Deferred\n * @exports vow:Deferred\n * @description\n * The `Deferred` class is used to encapsulate newly-created promise object along with functions that resolve, reject or notify it.\n */\n\n/**\n * @constructor\n * @description\n * You can use `vow.defer()` instead of using this constructor.\n *\n * `new vow.Deferred()` gives the same result as `vow.defer()`.\n */\nvar Deferred = function() {\n    this._promise = new Promise();\n};\n\nDeferred.prototype = /** @lends Deferred.prototype */{\n    /**\n     * Returns the corresponding promise.\n     *\n     * @returns {vow:Promise}\n     */\n    promise : function() {\n        return this._promise;\n    },\n\n    /**\n     * Resolves the corresponding promise with the given `value`.\n     *\n     * @param {*} value\n     *\n     * @example\n     * ```js\n     * var defer = vow.defer(),\n     *     promise = defer.promise();\n     *\n     * promise.then(function(value) {\n     *     // value is \"'success'\" here\n     * });\n     *\n     * defer.resolve('success');\n     * ```\n     */\n    resolve : function(value) {\n        this._promise.isResolved() || this._promise._resolve(value);\n    },\n\n    /**\n     * Rejects the corresponding promise with the given `reason`.\n     *\n     * @param {*} reason\n     *\n     * @example\n     * ```js\n     * var defer = vow.defer(),\n     *     promise = defer.promise();\n     *\n     * promise.fail(function(reason) {\n     *     // reason is \"'something is wrong'\" here\n     * });\n     *\n     * defer.reject('something is wrong');\n     * ```\n     */\n    reject : function(reason) {\n        if(this._promise.isResolved()) {\n            return;\n        }\n\n        if(vow.isPromise(reason)) {\n            reason = reason.then(function(val) {\n                var defer = vow.defer();\n                defer.reject(val);\n                return defer.promise();\n            });\n            this._promise._resolve(reason);\n        }\n        else {\n            this._promise._reject(reason);\n        }\n    },\n\n    /**\n     * Notifies the corresponding promise with the given `value`.\n     *\n     * @param {*} value\n     *\n     * @example\n     * ```js\n     * var defer = vow.defer(),\n     *     promise = defer.promise();\n     *\n     * promise.progress(function(value) {\n     *     // value is \"'20%'\", \"'40%'\" here\n     * });\n     *\n     * defer.notify('20%');\n     * defer.notify('40%');\n     * ```\n     */\n    notify : function(value) {\n        this._promise.isResolved() || this._promise._notify(value);\n    }\n};\n\nvar PROMISE_STATUS = {\n    PENDING   : 0,\n    RESOLVED  : 1,\n    FULFILLED : 2,\n    REJECTED  : 3\n};\n\n/**\n * @class Promise\n * @exports vow:Promise\n * @description\n * The `Promise` class is used when you want to give to the caller something to subscribe to,\n * but not the ability to resolve or reject the deferred.\n */\n\n/**\n * @constructor\n * @param {Function} resolver See https://github.com/domenic/promises-unwrapping/blob/master/README.md#the-promise-constructor for details.\n * @description\n * You should use this constructor directly only if you are going to use `vow` as DOM Promises implementation.\n * In other case you should use `vow.defer()` and `defer.promise()` methods.\n * @example\n * ```js\n * function fetchJSON(url) {\n *     return new vow.Promise(function(resolve, reject, notify) {\n *         var xhr = new XMLHttpRequest();\n *         xhr.open('GET', url);\n *         xhr.responseType = 'json';\n *         xhr.send();\n *         xhr.onload = function() {\n *             if(xhr.response) {\n *                 resolve(xhr.response);\n *             }\n *             else {\n *                 reject(new TypeError());\n *             }\n *         };\n *     });\n * }\n * ```\n */\nvar Promise = function(resolver) {\n    this._value = undef;\n    this._status = PROMISE_STATUS.PENDING;\n\n    this._fulfilledCallbacks = [];\n    this._rejectedCallbacks = [];\n    this._progressCallbacks = [];\n\n    if(resolver) { // NOTE: see https://github.com/domenic/promises-unwrapping/blob/master/README.md\n        var _this = this,\n            resolverFnLen = resolver.length;\n\n        resolver(\n            function(val) {\n                _this.isResolved() || _this._resolve(val);\n            },\n            resolverFnLen > 1?\n                function(reason) {\n                    _this.isResolved() || _this._reject(reason);\n                } :\n                undef,\n            resolverFnLen > 2?\n                function(val) {\n                    _this.isResolved() || _this._notify(val);\n                } :\n                undef);\n    }\n};\n\nPromise.prototype = /** @lends Promise.prototype */ {\n    /**\n     * Returns the value of the fulfilled promise or the reason in case of rejection.\n     *\n     * @returns {*}\n     */\n    valueOf : function() {\n        return this._value;\n    },\n\n    /**\n     * Returns `true` if the promise is resolved.\n     *\n     * @returns {Boolean}\n     */\n    isResolved : function() {\n        return this._status !== PROMISE_STATUS.PENDING;\n    },\n\n    /**\n     * Returns `true` if the promise is fulfilled.\n     *\n     * @returns {Boolean}\n     */\n    isFulfilled : function() {\n        return this._status === PROMISE_STATUS.FULFILLED;\n    },\n\n    /**\n     * Returns `true` if the promise is rejected.\n     *\n     * @returns {Boolean}\n     */\n    isRejected : function() {\n        return this._status === PROMISE_STATUS.REJECTED;\n    },\n\n    /**\n     * Adds reactions to the promise.\n     *\n     * @param {Function} [onFulfilled] Callback that will be invoked with a provided value after the promise has been fulfilled\n     * @param {Function} [onRejected] Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Function} [onProgress] Callback that will be invoked with a provided value after the promise has been notified\n     * @param {Object} [ctx] Context of the callbacks execution\n     * @returns {vow:Promise} A new promise, see https://github.com/promises-aplus/promises-spec for details\n     */\n    then : function(onFulfilled, onRejected, onProgress, ctx) {\n        var defer = new Deferred();\n        this._addCallbacks(defer, onFulfilled, onRejected, onProgress, ctx);\n        return defer.promise();\n    },\n\n    /**\n     * Adds only a rejection reaction. This method is a shorthand for `promise.then(undefined, onRejected)`.\n     *\n     * @param {Function} onRejected Callback that will be called with a provided 'reason' as argument after the promise has been rejected\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    'catch' : function(onRejected, ctx) {\n        return this.then(undef, onRejected, ctx);\n    },\n\n    /**\n     * Adds only a rejection reaction. This method is a shorthand for `promise.then(null, onRejected)`. It's also an alias for `catch`.\n     *\n     * @param {Function} onRejected Callback to be called with the value after promise has been rejected\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    fail : function(onRejected, ctx) {\n        return this.then(undef, onRejected, ctx);\n    },\n\n    /**\n     * Adds a resolving reaction (for both fulfillment and rejection).\n     *\n     * @param {Function} onResolved Callback that will be invoked with the promise as an argument, after the promise has been resolved.\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    always : function(onResolved, ctx) {\n        var _this = this,\n            cb = function() {\n                return onResolved.call(this, _this);\n            };\n\n        return this.then(cb, cb, ctx);\n    },\n\n    /**\n     * Adds a progress reaction.\n     *\n     * @param {Function} onProgress Callback that will be called with a provided value when the promise has been notified\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    progress : function(onProgress, ctx) {\n        return this.then(undef, undef, onProgress, ctx);\n    },\n\n    /**\n     * Like `promise.then`, but \"spreads\" the array into a variadic value handler.\n     * It is useful with the `vow.all` and the `vow.allResolved` methods.\n     *\n     * @param {Function} [onFulfilled] Callback that will be invoked with a provided value after the promise has been fulfilled\n     * @param {Function} [onRejected] Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Object} [ctx] Context of the callbacks execution\n     * @returns {vow:Promise}\n     *\n     * @example\n     * ```js\n     * var defer1 = vow.defer(),\n     *     defer2 = vow.defer();\n     *\n     * vow.all([defer1.promise(), defer2.promise()]).spread(function(arg1, arg2) {\n     *     // arg1 is \"1\", arg2 is \"'two'\" here\n     * });\n     *\n     * defer1.resolve(1);\n     * defer2.resolve('two');\n     * ```\n     */\n    spread : function(onFulfilled, onRejected, ctx) {\n        return this.then(\n            function(val) {\n                return onFulfilled.apply(this, val);\n            },\n            onRejected,\n            ctx);\n    },\n\n    /**\n     * Like `then`, but terminates a chain of promises.\n     * If the promise has been rejected, this method throws it's \"reason\" as an exception in a future turn of the event loop.\n     *\n     * @param {Function} [onFulfilled] Callback that will be invoked with a provided value after the promise has been fulfilled\n     * @param {Function} [onRejected] Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Function} [onProgress] Callback that will be invoked with a provided value after the promise has been notified\n     * @param {Object} [ctx] Context of the callbacks execution\n     *\n     * @example\n     * ```js\n     * var defer = vow.defer();\n     * defer.reject(Error('Internal error'));\n     * defer.promise().done(); // exception to be thrown\n     * ```\n     */\n    done : function(onFulfilled, onRejected, onProgress, ctx) {\n        this\n            .then(onFulfilled, onRejected, onProgress, ctx)\n            .fail(throwException);\n    },\n\n    /**\n     * Returns a new promise that will be fulfilled in `delay` milliseconds if the promise is fulfilled,\n     * or immediately rejected if the promise is rejected.\n     *\n     * @param {Number} delay\n     * @returns {vow:Promise}\n     */\n    delay : function(delay) {\n        var timer,\n            promise = this.then(function(val) {\n                var defer = new Deferred();\n                timer = setTimeout(\n                    function() {\n                        defer.resolve(val);\n                    },\n                    delay);\n\n                return defer.promise();\n            });\n\n        promise.always(function() {\n            clearTimeout(timer);\n        });\n\n        return promise;\n    },\n\n    /**\n     * Returns a new promise that will be rejected in `timeout` milliseconds\n     * if the promise is not resolved beforehand.\n     *\n     * @param {Number} timeout\n     * @returns {vow:Promise}\n     *\n     * @example\n     * ```js\n     * var defer = vow.defer(),\n     *     promiseWithTimeout1 = defer.promise().timeout(50),\n     *     promiseWithTimeout2 = defer.promise().timeout(200);\n     *\n     * setTimeout(\n     *     function() {\n     *         defer.resolve('ok');\n     *     },\n     *     100);\n     *\n     * promiseWithTimeout1.fail(function(reason) {\n     *     // promiseWithTimeout to be rejected in 50ms\n     * });\n     *\n     * promiseWithTimeout2.then(function(value) {\n     *     // promiseWithTimeout to be fulfilled with \"'ok'\" value\n     * });\n     * ```\n     */\n    timeout : function(timeout) {\n        var defer = new Deferred(),\n            timer = setTimeout(\n                function() {\n                    defer.reject(new vow.TimedOutError('timed out'));\n                },\n                timeout);\n\n        this.then(\n            function(val) {\n                defer.resolve(val);\n            },\n            function(reason) {\n                defer.reject(reason);\n            });\n\n        defer.promise().always(function() {\n            clearTimeout(timer);\n        });\n\n        return defer.promise();\n    },\n\n    _vow : true,\n\n    _resolve : function(val) {\n        if(this._status > PROMISE_STATUS.RESOLVED) {\n            return;\n        }\n\n        if(val === this) {\n            this._reject(TypeError('Can\\'t resolve promise with itself'));\n            return;\n        }\n\n        this._status = PROMISE_STATUS.RESOLVED;\n\n        if(val && !!val._vow) { // shortpath for vow.Promise\n            val.isFulfilled()?\n                this._fulfill(val.valueOf()) :\n                val.isRejected()?\n                    this._reject(val.valueOf()) :\n                    val.then(\n                        this._fulfill,\n                        this._reject,\n                        this._notify,\n                        this);\n            return;\n        }\n\n        if(isObject(val) || isFunction(val)) {\n            var then;\n            try {\n                then = val.then;\n            }\n            catch(e) {\n                this._reject(e);\n                return;\n            }\n\n            if(isFunction(then)) {\n                var _this = this,\n                    isResolved = false;\n\n                try {\n                    then.call(\n                        val,\n                        function(val) {\n                            if(isResolved) {\n                                return;\n                            }\n\n                            isResolved = true;\n                            _this._resolve(val);\n                        },\n                        function(err) {\n                            if(isResolved) {\n                                return;\n                            }\n\n                            isResolved = true;\n                            _this._reject(err);\n                        },\n                        function(val) {\n                            _this._notify(val);\n                        });\n                }\n                catch(e) {\n                    isResolved || this._reject(e);\n                }\n\n                return;\n            }\n        }\n\n        this._fulfill(val);\n    },\n\n    _fulfill : function(val) {\n        if(this._status > PROMISE_STATUS.RESOLVED) {\n            return;\n        }\n\n        this._status = PROMISE_STATUS.FULFILLED;\n        this._value = val;\n\n        this._callCallbacks(this._fulfilledCallbacks, val);\n        this._fulfilledCallbacks = this._rejectedCallbacks = this._progressCallbacks = undef;\n    },\n\n    _reject : function(reason) {\n        if(this._status > PROMISE_STATUS.RESOLVED) {\n            return;\n        }\n\n        this._status = PROMISE_STATUS.REJECTED;\n        this._value = reason;\n\n        this._callCallbacks(this._rejectedCallbacks, reason);\n        this._fulfilledCallbacks = this._rejectedCallbacks = this._progressCallbacks = undef;\n    },\n\n    _notify : function(val) {\n        this._callCallbacks(this._progressCallbacks, val);\n    },\n\n    _addCallbacks : function(defer, onFulfilled, onRejected, onProgress, ctx) {\n        if(onRejected && !isFunction(onRejected)) {\n            ctx = onRejected;\n            onRejected = undef;\n        }\n        else if(onProgress && !isFunction(onProgress)) {\n            ctx = onProgress;\n            onProgress = undef;\n        }\n\n        var cb;\n\n        if(!this.isRejected()) {\n            cb = { defer : defer, fn : isFunction(onFulfilled)? onFulfilled : undef, ctx : ctx };\n            this.isFulfilled()?\n                this._callCallbacks([cb], this._value) :\n                this._fulfilledCallbacks.push(cb);\n        }\n\n        if(!this.isFulfilled()) {\n            cb = { defer : defer, fn : onRejected, ctx : ctx };\n            this.isRejected()?\n                this._callCallbacks([cb], this._value) :\n                this._rejectedCallbacks.push(cb);\n        }\n\n        if(this._status <= PROMISE_STATUS.RESOLVED) {\n            this._progressCallbacks.push({ defer : defer, fn : onProgress, ctx : ctx });\n        }\n    },\n\n    _callCallbacks : function(callbacks, arg) {\n        var len = callbacks.length;\n        if(!len) {\n            return;\n        }\n\n        var isResolved = this.isResolved(),\n            isFulfilled = this.isFulfilled(),\n            isRejected = this.isRejected();\n\n        nextTick(function() {\n            var i = 0, cb, defer, fn;\n            while(i < len) {\n                cb = callbacks[i++];\n                defer = cb.defer;\n                fn = cb.fn;\n\n                if(fn) {\n                    var ctx = cb.ctx,\n                        res;\n                    try {\n                        res = ctx? fn.call(ctx, arg) : fn(arg);\n                    }\n                    catch(e) {\n                        defer.reject(e);\n                        continue;\n                    }\n\n                    isResolved?\n                        defer.resolve(res) :\n                        defer.notify(res);\n                }\n                else if(isFulfilled) {\n                    defer.resolve(arg);\n                }\n                else if(isRejected) {\n                    defer.reject(arg);\n                }\n                else {\n                    defer.notify(arg);\n                }\n            }\n        });\n    }\n};\n\n/** @lends Promise */\nvar staticMethods = {\n    /**\n     * Coerces the given `value` to a promise, or returns the `value` if it's already a promise.\n     *\n     * @param {*} value\n     * @returns {vow:Promise}\n     */\n    cast : function(value) {\n        return vow.cast(value);\n    },\n\n    /**\n     * Returns a promise, that will be fulfilled only after all the items in `iterable` are fulfilled.\n     * If any of the `iterable` items gets rejected, then the returned promise will be rejected.\n     *\n     * @param {Array|Object} iterable\n     * @returns {vow:Promise}\n     */\n    all : function(iterable) {\n        return vow.all(iterable);\n    },\n\n    /**\n     * Returns a promise, that will be fulfilled only when any of the items in `iterable` are fulfilled.\n     * If any of the `iterable` items gets rejected, then the returned promise will be rejected.\n     *\n     * @param {Array} iterable\n     * @returns {vow:Promise}\n     */\n    race : function(iterable) {\n        return vow.anyResolved(iterable);\n    },\n\n    /**\n     * Returns a promise that has already been resolved with the given `value`.\n     * If `value` is a promise, the returned promise will have `value`'s state.\n     *\n     * @param {*} value\n     * @returns {vow:Promise}\n     */\n    resolve : function(value) {\n        return vow.resolve(value);\n    },\n\n    /**\n     * Returns a promise that has already been rejected with the given `reason`.\n     *\n     * @param {*} reason\n     * @returns {vow:Promise}\n     */\n    reject : function(reason) {\n        return vow.reject(reason);\n    }\n};\n\nfor(var prop in staticMethods) {\n    staticMethods.hasOwnProperty(prop) &&\n        (Promise[prop] = staticMethods[prop]);\n}\n\nvar vow = /** @exports vow */ {\n    Deferred : Deferred,\n\n    Promise : Promise,\n\n    /**\n     * Creates a new deferred. This method is a factory method for `vow:Deferred` class.\n     * It's equivalent to `new vow.Deferred()`.\n     *\n     * @returns {vow:Deferred}\n     */\n    defer : function() {\n        return new Deferred();\n    },\n\n    /**\n     * Static equivalent to `promise.then`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Function} [onFulfilled] Callback that will be invoked with a provided value after the promise has been fulfilled\n     * @param {Function} [onRejected] Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Function} [onProgress] Callback that will be invoked with a provided value after the promise has been notified\n     * @param {Object} [ctx] Context of the callbacks execution\n     * @returns {vow:Promise}\n     */\n    when : function(value, onFulfilled, onRejected, onProgress, ctx) {\n        return vow.cast(value).then(onFulfilled, onRejected, onProgress, ctx);\n    },\n\n    /**\n     * Static equivalent to `promise.fail`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Function} onRejected Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    fail : function(value, onRejected, ctx) {\n        return vow.when(value, undef, onRejected, ctx);\n    },\n\n    /**\n     * Static equivalent to `promise.always`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Function} onResolved Callback that will be invoked with the promise as an argument, after the promise has been resolved.\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    always : function(value, onResolved, ctx) {\n        return vow.when(value).always(onResolved, ctx);\n    },\n\n    /**\n     * Static equivalent to `promise.progress`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Function} onProgress Callback that will be invoked with a provided value after the promise has been notified\n     * @param {Object} [ctx] Context of the callback execution\n     * @returns {vow:Promise}\n     */\n    progress : function(value, onProgress, ctx) {\n        return vow.when(value).progress(onProgress, ctx);\n    },\n\n    /**\n     * Static equivalent to `promise.spread`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Function} [onFulfilled] Callback that will be invoked with a provided value after the promise has been fulfilled\n     * @param {Function} [onRejected] Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Object} [ctx] Context of the callbacks execution\n     * @returns {vow:Promise}\n     */\n    spread : function(value, onFulfilled, onRejected, ctx) {\n        return vow.when(value).spread(onFulfilled, onRejected, ctx);\n    },\n\n    /**\n     * Static equivalent to `promise.done`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Function} [onFulfilled] Callback that will be invoked with a provided value after the promise has been fulfilled\n     * @param {Function} [onRejected] Callback that will be invoked with a provided reason after the promise has been rejected\n     * @param {Function} [onProgress] Callback that will be invoked with a provided value after the promise has been notified\n     * @param {Object} [ctx] Context of the callbacks execution\n     */\n    done : function(value, onFulfilled, onRejected, onProgress, ctx) {\n        vow.when(value).done(onFulfilled, onRejected, onProgress, ctx);\n    },\n\n    /**\n     * Checks whether the given `value` is a promise-like object\n     *\n     * @param {*} value\n     * @returns {Boolean}\n     *\n     * @example\n     * ```js\n     * vow.isPromise('something'); // returns false\n     * vow.isPromise(vow.defer().promise()); // returns true\n     * vow.isPromise({ then : function() { }); // returns true\n     * ```\n     */\n    isPromise : function(value) {\n        return isObject(value) && isFunction(value.then);\n    },\n\n    /**\n     * Coerces the given `value` to a promise, or returns the `value` if it's already a promise.\n     *\n     * @param {*} value\n     * @returns {vow:Promise}\n     */\n    cast : function(value) {\n        return value && !!value._vow?\n            value :\n            vow.resolve(value);\n    },\n\n    /**\n     * Static equivalent to `promise.valueOf`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @returns {*}\n     */\n    valueOf : function(value) {\n        return value && isFunction(value.valueOf)? value.valueOf() : value;\n    },\n\n    /**\n     * Static equivalent to `promise.isFulfilled`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @returns {Boolean}\n     */\n    isFulfilled : function(value) {\n        return value && isFunction(value.isFulfilled)? value.isFulfilled() : true;\n    },\n\n    /**\n     * Static equivalent to `promise.isRejected`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @returns {Boolean}\n     */\n    isRejected : function(value) {\n        return value && isFunction(value.isRejected)? value.isRejected() : false;\n    },\n\n    /**\n     * Static equivalent to `promise.isResolved`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @returns {Boolean}\n     */\n    isResolved : function(value) {\n        return value && isFunction(value.isResolved)? value.isResolved() : true;\n    },\n\n    /**\n     * Returns a promise that has already been resolved with the given `value`.\n     * If `value` is a promise, the returned promise will have `value`'s state.\n     *\n     * @param {*} value\n     * @returns {vow:Promise}\n     */\n    resolve : function(value) {\n        var res = vow.defer();\n        res.resolve(value);\n        return res.promise();\n    },\n\n    /**\n     * Returns a promise that has already been fulfilled with the given `value`.\n     * If `value` is a promise, the returned promise will be fulfilled with the fulfill/rejection value of `value`.\n     *\n     * @param {*} value\n     * @returns {vow:Promise}\n     */\n    fulfill : function(value) {\n        var defer = vow.defer(),\n            promise = defer.promise();\n\n        defer.resolve(value);\n\n        return promise.isFulfilled()?\n            promise :\n            promise.then(null, function(reason) {\n                return reason;\n            });\n    },\n\n    /**\n     * Returns a promise that has already been rejected with the given `reason`.\n     * If `reason` is a promise, the returned promise will be rejected with the fulfill/rejection value of `reason`.\n     *\n     * @param {*} reason\n     * @returns {vow:Promise}\n     */\n    reject : function(reason) {\n        var defer = vow.defer();\n        defer.reject(reason);\n        return defer.promise();\n    },\n\n    /**\n     * Invokes the given function `fn` with arguments `args`\n     *\n     * @param {Function} fn\n     * @param {...*} [args]\n     * @returns {vow:Promise}\n     *\n     * @example\n     * ```js\n     * var promise1 = vow.invoke(function(value) {\n     *         return value;\n     *     }, 'ok'),\n     *     promise2 = vow.invoke(function() {\n     *         throw Error();\n     *     });\n     *\n     * promise1.isFulfilled(); // true\n     * promise1.valueOf(); // 'ok'\n     * promise2.isRejected(); // true\n     * promise2.valueOf(); // instance of Error\n     * ```\n     */\n    invoke : function(fn, args) {\n        var len = Math.max(arguments.length - 1, 0),\n            callArgs;\n        if(len) { // optimization for V8\n            callArgs = Array(len);\n            var i = 0;\n            while(i < len) {\n                callArgs[i++] = arguments[i];\n            }\n        }\n\n        try {\n            return vow.resolve(callArgs?\n                fn.apply(global, callArgs) :\n                fn.call(global));\n        }\n        catch(e) {\n            return vow.reject(e);\n        }\n    },\n\n    /**\n     * Returns a promise, that will be fulfilled only after all the items in `iterable` are fulfilled.\n     * If any of the `iterable` items gets rejected, the promise will be rejected.\n     *\n     * @param {Array|Object} iterable\n     * @returns {vow:Promise}\n     *\n     * @example\n     * with array:\n     * ```js\n     * var defer1 = vow.defer(),\n     *     defer2 = vow.defer();\n     *\n     * vow.all([defer1.promise(), defer2.promise(), 3])\n     *     .then(function(value) {\n     *          // value is \"[1, 2, 3]\" here\n     *     });\n     *\n     * defer1.resolve(1);\n     * defer2.resolve(2);\n     * ```\n     *\n     * @example\n     * with object:\n     * ```js\n     * var defer1 = vow.defer(),\n     *     defer2 = vow.defer();\n     *\n     * vow.all({ p1 : defer1.promise(), p2 : defer2.promise(), p3 : 3 })\n     *     .then(function(value) {\n     *          // value is \"{ p1 : 1, p2 : 2, p3 : 3 }\" here\n     *     });\n     *\n     * defer1.resolve(1);\n     * defer2.resolve(2);\n     * ```\n     */\n    all : function(iterable) {\n        var defer = new Deferred(),\n            isPromisesArray = isArray(iterable),\n            keys = isPromisesArray?\n                getArrayKeys(iterable) :\n                getObjectKeys(iterable),\n            len = keys.length,\n            res = isPromisesArray? [] : {};\n\n        if(!len) {\n            defer.resolve(res);\n            return defer.promise();\n        }\n\n        var i = len;\n        vow._forEach(\n            iterable,\n            function(value, idx) {\n                res[keys[idx]] = value;\n                if(!--i) {\n                    defer.resolve(res);\n                }\n            },\n            defer.reject,\n            defer.notify,\n            defer,\n            keys);\n\n        return defer.promise();\n    },\n\n    /**\n     * Returns a promise, that will be fulfilled only after all the items in `iterable` are resolved.\n     *\n     * @param {Array|Object} iterable\n     * @returns {vow:Promise}\n     *\n     * @example\n     * ```js\n     * var defer1 = vow.defer(),\n     *     defer2 = vow.defer();\n     *\n     * vow.allResolved([defer1.promise(), defer2.promise()]).spread(function(promise1, promise2) {\n     *     promise1.isRejected(); // returns true\n     *     promise1.valueOf(); // returns \"'error'\"\n     *     promise2.isFulfilled(); // returns true\n     *     promise2.valueOf(); // returns \"'ok'\"\n     * });\n     *\n     * defer1.reject('error');\n     * defer2.resolve('ok');\n     * ```\n     */\n    allResolved : function(iterable) {\n        var defer = new Deferred(),\n            isPromisesArray = isArray(iterable),\n            keys = isPromisesArray?\n                getArrayKeys(iterable) :\n                getObjectKeys(iterable),\n            i = keys.length,\n            res = isPromisesArray? [] : {};\n\n        if(!i) {\n            defer.resolve(res);\n            return defer.promise();\n        }\n\n        var onResolved = function() {\n                --i || defer.resolve(iterable);\n            };\n\n        vow._forEach(\n            iterable,\n            onResolved,\n            onResolved,\n            defer.notify,\n            defer,\n            keys);\n\n        return defer.promise();\n    },\n\n    allPatiently : function(iterable) {\n        return vow.allResolved(iterable).then(function() {\n            var isPromisesArray = isArray(iterable),\n                keys = isPromisesArray?\n                    getArrayKeys(iterable) :\n                    getObjectKeys(iterable),\n                rejectedPromises, fulfilledPromises,\n                len = keys.length, i = 0, key, promise;\n\n            if(!len) {\n                return isPromisesArray? [] : {};\n            }\n\n            while(i < len) {\n                key = keys[i++];\n                promise = iterable[key];\n                if(vow.isRejected(promise)) {\n                    rejectedPromises || (rejectedPromises = isPromisesArray? [] : {});\n                    isPromisesArray?\n                        rejectedPromises.push(promise.valueOf()) :\n                        rejectedPromises[key] = promise.valueOf();\n                }\n                else if(!rejectedPromises) {\n                    (fulfilledPromises || (fulfilledPromises = isPromisesArray? [] : {}))[key] = vow.valueOf(promise);\n                }\n            }\n\n            if(rejectedPromises) {\n                throw rejectedPromises;\n            }\n\n            return fulfilledPromises;\n        });\n    },\n\n    /**\n     * Returns a promise, that will be fulfilled if any of the items in `iterable` is fulfilled.\n     * If all of the `iterable` items get rejected, the promise will be rejected (with the reason of the first rejected item).\n     *\n     * @param {Array} iterable\n     * @returns {vow:Promise}\n     */\n    any : function(iterable) {\n        var defer = new Deferred(),\n            len = iterable.length;\n\n        if(!len) {\n            defer.reject(Error());\n            return defer.promise();\n        }\n\n        var i = 0, reason;\n        vow._forEach(\n            iterable,\n            defer.resolve,\n            function(e) {\n                i || (reason = e);\n                ++i === len && defer.reject(reason);\n            },\n            defer.notify,\n            defer);\n\n        return defer.promise();\n    },\n\n    /**\n     * Returns a promise, that will be fulfilled only when any of the items in `iterable` is fulfilled.\n     * If any of the `iterable` items gets rejected, the promise will be rejected.\n     *\n     * @param {Array} iterable\n     * @returns {vow:Promise}\n     */\n    anyResolved : function(iterable) {\n        var defer = new Deferred(),\n            len = iterable.length;\n\n        if(!len) {\n            defer.reject(Error());\n            return defer.promise();\n        }\n\n        vow._forEach(\n            iterable,\n            defer.resolve,\n            defer.reject,\n            defer.notify,\n            defer);\n\n        return defer.promise();\n    },\n\n    /**\n     * Static equivalent to `promise.delay`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Number} delay\n     * @returns {vow:Promise}\n     */\n    delay : function(value, delay) {\n        return vow.resolve(value).delay(delay);\n    },\n\n    /**\n     * Static equivalent to `promise.timeout`.\n     * If `value` is not a promise, then `value` is treated as a fulfilled promise.\n     *\n     * @param {*} value\n     * @param {Number} timeout\n     * @returns {vow:Promise}\n     */\n    timeout : function(value, timeout) {\n        return vow.resolve(value).timeout(timeout);\n    },\n\n    _forEach : function(promises, onFulfilled, onRejected, onProgress, ctx, keys) {\n        var len = keys? keys.length : promises.length,\n            i = 0;\n\n        while(i < len) {\n            vow.when(\n                promises[keys? keys[i] : i],\n                wrapOnFulfilled(onFulfilled, i),\n                onRejected,\n                onProgress,\n                ctx);\n            ++i;\n        }\n    },\n\n    TimedOutError : defineCustomErrorType('TimedOut')\n};\n\nvar defineAsGlobal = true;\nif(typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = vow;\n    defineAsGlobal = false;\n}\n\nif(typeof modules === 'object' && isFunction(modules.define)) {\n    modules.define('vow', function(provide) {\n        provide(vow);\n    });\n    defineAsGlobal = false;\n}\n\nif(typeof define === 'function') {\n    define(function(require, exports, module) {\n        module.exports = vow;\n    });\n    defineAsGlobal = false;\n}\n\ndefineAsGlobal && (global.vow = vow);\n\n})(typeof window !== 'undefined'? window : global);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/biojs-io-parser/~/vow/lib/vow.js\n ** module id = 11\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 12\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it don't break things.\nvar cachedSetTimeout = setTimeout;\nvar cachedClearTimeout = clearTimeout;\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = cachedSetTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    cachedClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        cachedSetTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 13\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.10.0\n(function() {\n  var Fasta, extend, st;\n\n  st = require(\"msa-seqtools\");\n\n  extend = require(\"./extend\");\n\n  module.exports = Fasta = {\n    getMeta: st.getMeta,\n    extend: function(metaParser) {\n      var customFasta;\n      customFasta = extend(Fasta);\n      Fasta.getMeta = metaParser;\n      return customFasta;\n    },\n    parse: function(text) {\n      var currentSeq, getMeta, i, id, label, len, line, obj, seqs;\n      seqs = [];\n      if (!text || text.length === 0) {\n        return [];\n      }\n      if (Object.prototype.toString.call(text) !== '[object Array]') {\n        text = text.split(\"\\n\");\n      }\n      getMeta = Fasta.getMeta;\n      for (i = 0, len = text.length; i < len; i++) {\n        line = text[i];\n        if (line[0] === \">\" || line[0] === \";\") {\n          label = line.slice(1);\n          obj = getMeta(label);\n          label = obj.name;\n          id = obj.id || seqs.length;\n          currentSeq = new st.model(\"\", obj.name, id);\n          currentSeq.ids = obj.ids || {};\n          currentSeq.details = obj.details || {};\n          seqs.push(currentSeq);\n        } else {\n          currentSeq.seq += line;\n        }\n      }\n      return seqs;\n    },\n    write: function(seqs, access) {\n      var i, len, seq, text;\n      text = \"\";\n      for (i = 0, len = seqs.length; i < len; i++) {\n        seq = seqs[i];\n        if (access != null) {\n          seq = access(seq);\n        }\n        text += \">\" + seq.name + \"\\n\";\n        text += (st.splitNChars(seq.seq, 80)).join(\"\\n\");\n        text += \"\\n\";\n      }\n      return text;\n    }\n  };\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/fasta.js\n ** module id = 14\n ** module chunks = 0\n **/","/*\n * msa-seqtools\n * https://github.com/greenify/msa-seqtools\n *\n * Copyright (c) 2014 greenify\n * Licensed under the MIT license.\n */\n\nvar st = {};\nmodule.exports = st;\n\n/****\n * Seems to be lots of different ways to format FASTA headers. \n * \n * Generally there's an ID and a DESCRIPTION\n *   >ID DESCRIPTION\n * \n *   >(parts|of|ID) (DESCRIPTION with optional key=values)\n *   \n * This is complicated by the fact that the \"values\" in the description can have spaces\n * e.g. OS=Arabidopsis thaliana GN=CCD8\n * \n ****\n*/\n\n// extract IDs and push them to the meta dict\nst.getMeta = function(label) {\n  \n\tvar full_id = false, full_desc = false;\n\tvar name, ids = {}, details = {}, description;\n\n// \tconsole.log( \"getMeta.label: \", label );\n  \n\tvar label_parts = label.split(\" \");\n\n\tif ( label_parts.length >= 1 ) {\n\t\tfull_id   = label_parts.shift();     // everything up to the first white space\n\t\tfull_desc = label_parts.join(\" \");   // everything else\n\t}\n\telse {\n\t\tfull_id = label; \n\t}\n\t\n// \tconsole.log( \"full_id\", full_id );\n// \tconsole.log( \"full_desc\", full_desc );\n\t\n\tif ( full_id ) {\n\t\tvar id_parts = full_id.split('|');\n\t\t\n\t\t// the last item is the accession\n\t\tname = id_parts.pop(); \n\t\t\n\t\tdetails.en = name;\n\t\t\n\t\t// everything else should be pairs: db|id\n\t\twhile ( id_parts.length != 0 ) {\n\t\t\tvar db = id_parts.shift();\n\t\t\tvar id = id_parts.shift();\n\t\t\tids[ db ] = id;\n\t\t}\n\t}\n\telse {\n\t\tname = full_id;\n\t}\n\n\tif ( full_desc ) {\n\t\n\t\tvar kv_parts = full_desc.split('=');\n\t\n\t\tif ( kv_parts.length > 1 ) {\n\t\t\t\n\t\t\tvar current_key, next_key;\n\t\t\tvar kv;\n\t\t\tvar kv_idx_max = kv_parts.length - 1;\n\t\t\tvar kv_idx = 0;\n\t\t\tkv_parts.forEach( function( value_and_maybe_next_key ) {\n\t\t\t\t\n\t\t\t\tvalue_and_maybe_next_key = value_and_maybe_next_key.trim();\n\t\t\t\t\n\t\t\t\tvar value_parts = value_and_maybe_next_key.split(\" \");\n\t\t\t\tvar value;\n\t\t\t\tif ( value_parts.length > 1 ) {\n\t\t\t\t\tnext_key = value_parts.pop();\n\t\t\t\t\tvalue = value_parts.join(' ');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalue = value_and_maybe_next_key;\n\t\t\t\t}\n\n\t\t\t\tif ( current_key ) {\n\t\t\t\t\tvar key = current_key.toLowerCase();\n\t\t\t\t\tdetails[ key ] = value;\n\t\t\t\t\t//console.log( \"details[\" + key + \"] = \" + value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdescription = value;\n\t\t\t\t\t//console.log( \"description=\" + value );\n\t\t\t\t}\n\t\t\t\tcurrent_key = next_key;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tdescription = kv_parts.shift();\n\t\t}\n\t}\n\t\n\tvar meta = {\n\t\tname: name,\n\t\tids: ids,\n\t\tdetails: details,\n\t};\n\t\n\tif ( description ) {\n\t\tmeta.desc = description\n\t}\n\t\n// \tconsole.log( \"meta\", meta );\n\t\n\treturn meta;\n};\n\nvar findSepInArr = function(arr, sep) {\n  for (var i = 0; i < arr.lenght; i++) {\n    if (arr[i].indexOf(i)) {\n      return i;\n    }\n  }\n  return arr.length - 1;\n};\n\nvar strToDict = function(str, sep, toJoin) {\n  toJoin = toJoin || {};\n  var entries = str.split(sep);\n  toJoin[entries[0].toLowerCase()] = entries[1];\n  return toJoin;\n};\n\nvar identDB = {\n  \"sp\": {\n    link: \"http://www.uniprot.org/%s\",\n    name: \"Uniprot\"\n  },\n  \"tr\": {\n    link: \"http://www.uniprot.org/%s\",\n    name: \"Trembl\"\n  },\n  \"gb\": {\n    link: \"http://www.ncbi.nlm.nih.gov/nuccore/%s\",\n    name: \"Genbank\"\n  },\n  \"pdb\": {\n    link: \"http://www.rcsb.org/pdb/explore/explore.do?structureId=%s\",\n    name: \"PDB\"\n  }\n};\n\nst.buildLinks = function(meta) {\n  var links = {};\n  meta = meta || {};\n  Object.keys(meta).forEach(function(id) {\n    if (id in identDB) {\n      var entry = identDB[id];\n      var link = entry.link.replace(\"%s\", meta[id]);\n      links[entry.name] = link;\n    }\n  });\n  return links;\n};\n\n\n// search for a text\nst.contains = function(text, search) {\n  return ''.indexOf.call(text, search, 0) !== -1;\n};\n\n// split after e.g. 80 chars\nst.splitNChars = function(txt, num) {\n  var i, _ref;\n  num = num || 80;\n  var result = [];\n  for (i = 0, _ref = txt.length - 1; i <= _ref; i += num) {\n    result.push(txt.substr(i, num));\n  }\n  return result;\n};\n\nst.reverse = function(seq) {\n  return seq.split('').reverse().join('');\n}\n\nst.complement = function(seq) {\n  var newSeq = seq + \"\";\n  var replacements = [\n    // cg\n    [/g/g, \"0\"],\n    [/c/g, \"1\"],\n    [/0/g, \"c\"],\n    [/1/g, \"g\"],\n    // CG\n    [/G/g, \"0\"],\n    [/C/g, \"1\"],\n    [/0/g, \"C\"],\n    [/1/g, \"G\"],\n    // at\n    [/a/g, \"0\"],\n    [/t/g, \"1\"],\n    [/0/g, \"t\"],\n    [/1/g, \"a\"],\n    // AT\n    [/A/g, \"0\"],\n    [/T/g, \"1\"],\n    [/0/g, \"T\"],\n    [/1/g, \"A\"],\n  ];\n\n  for(var rep in replacements){\n    newSeq = newSeq.replace(replacements[rep][0], replacements[rep][1]);\n  }\n  return newSeq;\n}\n\nst.reverseComplement = function(seq){\n  return st.reverse(st.complement(seq));\n}\n\nst.model = function Seq(seq, name, id) {\n  this.seq = seq;\n  this.name = name;\n  this.id = id;\n  this.ids = {};\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/msa-seqtools/lib/index.js\n ** module id = 15\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.10.0\n(function() {\n  module.exports = function(out) {\n    var i, j, k, key, len, ref, ref1;\n    out = out || {};\n    for (i = j = 0, ref = arguments.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      if (!arguments[i]) {\n        continue;\n      }\n      ref1 = arguments[i];\n      for (k = 0, len = ref1.length; k < len; k++) {\n        key = ref1[k];\n        if (arguments[i].hasOwnProperty(key)) {\n          out[key] = arguments[i][key];\n        }\n      }\n    }\n    return out;\n  };\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/extend.js\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}